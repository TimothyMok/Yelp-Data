##### Complete code here and uncomment it
USDA_Selected_Featuers <- USDAclean[,c('Calories','Carbohydrate','Protein','TotalFat','Sodium')]
###################################################
#### Uncomment the following line when you assign USDA_Selected_Featuers to show the results
pairs(USDA_Selected_Featuers, lower.panel=panel.smooth, upper.panel=panel.cor);
# Explain what you can conclude from this visualization as a comment here
# There is a high correlation between calories and fat (0.8 as shown below.)
# Next up will be Calories vs Carbohydrate (value of 0.42)
# Protein is slightly lower with (value of 0.3). The rest have weak to no correlation compare to Calories
summary(LM))
summary(LM);
summary(LM);
# TotalFat has the strongest positive predictive power in the model as it demonstrated the highest coefficient among all classes.
summary(LM);
# TotalFat has the strongest positive predictive power in the model as it demonstrated the highest coefficient among all classes.
predict(LM, data.frame(Protein=0.1,TotalFat=40,Carbohydrate=425,Sodium=430,Cholesterol=75),interval="0");
predict(LM, data.frame(Protein=0.1,TotalFat=40,Carbohydrate=425,Sodium=430,Cholesterol=75),interval=");
;
)
)
)
Data Prep
Preparation: The dataset is related to whit
knitr::opts_chunk$set(echo = TRUE)
wine.df <- read.csv("winequality-white.csv", header=T, sep=";")
sum(is.na(wine.df))
str(wine.df)
sapply(wine.df, function(x) sum(is.na(x)))
sum(is.na(wine.df))
# There are no missing data
str(wine.df)
sapply(wine.df, function(x) sum(is.na(x)))
# Check NA for each columns, there are none
sapply(wine.df, function(x) sum(is.null(x)))
# Check Nulls for each columns, there are also none
library(corrplot)
knitr::opts_chunk$set(echo = TRUE)
library(corrplot)
(wine.corrplot <- cor(wine.df[,-12]))
# load the wine dataframe set into wine.corrplot
corrplot(wine.corrplot, method="circle")
# load the wine dataframe set into wine.corrplot
corrplot(wine.corrplot, method="numbers")
corrplot(wine.corrplot, method="number")
# Utilize the corrplot for visualization tool, notice that density is highly correlated to residual.sugar. Next up is that alcohol and density have a high negative correlation.
sapply(wine.df, function(x)sum(is.na(x)))
# Check NA for each columns, there are none
corrplot(wine.corrplot, method="number")
# Utilize the corrplot for visualization tool, notice that density is highly correlated to residual.sugar. Next up is that alcohol and density have a high negative correlation.
hist(wine.df$quality, freq=T, breaks=seq(2.5,9.5,1), main="Frequency Distirbution of Wine Quality", xlab="Frequency")
hist(wine.df$quality, freq=T, breaks=seq(2.5,9.5,1), main="Frequency Distirbution of Wine Quality", xlab="Frequency",ylab="Wine Quality")
hist(wine.df$quality, freq=T, breaks=seq(2.5,9.5,1), main="Frequency Distirbution of Wine Quality", xlab="Frequency",ylab="Frequency")
?hist
hist(wine.df$quality, freq=T, breaks=seq(2.5,9.5,1), main="Frequency Distirbution of Wine Quality", xlab="Frequency",ylab="Frequency")
hist(wine.df$quality, freq=T, breaks=seq(2.5,9.5,1), main="Frequency Distirbution of Wine Quality", xlab="Frequency",ylab="Wine Quality")
hist(wine.df$quality, freq=T, breaks=seq(2.5,9.5,1), main="Frequency Distirbution of Wine Quality", xlab="Wine Quality",ylab="Frequency")
hist(wine.df$quality, freq=T, breaks=seq(1.5,9.5,1), main="Frequency Distirbution of Wine Quality", xlab="Wine Quality",ylab="Frequency")
hist(wine.df$quality, freq=T, breaks=seq(1.5,8.5,1), main="Frequency Distirbution of Wine Quality", xlab="Wine Quality",ylab="Frequency")
hist(wine.df$quality, freq=T, breaks=seq(1.5,9.5,1), main="Frequency Distirbution of Wine Quality", xlab="Wine Quality",ylab="Frequency")
hist(wine.df$quality, freq=T, breaks=seq(1.5,9.5,1), main="Frequency Distirbution of Wine Quality", xlab="WINE QUALITY",ylab="FREQUENCY")
wine.df$quality<-cut(wine.df$quality, 3, labels=c("LOW","MEDIUM","HIGH"))
table(wine.df$quality)
plot(wine.df$quality, main="Distribution of Wine Quality Levels", xlab="WINE QUALITY LEVEL", ylab="FREQUENCY")
wine.df.norm <- as.data.frame(scale(wine.df[,-12],scale=T, center=T)
wine.df.norm <- as.data.frame(scale(wine.df[,-12],scale=T, center=T))
plot(wine.df$quality, main="Distribution of Wine Quality Levels", xlab="WINE QUALITY LEVEL", ylab="FREQUENCY")
wine.tset_index <- sample(1:nrow(wine.df.norm), 0.7*nrow(wine.df.norm))
wine.tset <- wine.df.norm[wine.tset_index,]
wine.test <- wine.df.norm[-wine.tset_index,]
(nrow(wine.df) == (nrow(wine.tset) + nrow(wine.test)))
wine.df$quality<-cut(wine.df$quality, 3, labels=c("LOW","MEDIUM","HIGH"));
wine.df$quality<-cut(wine.df$quality, 3, labels=c("LOW","MEDIUM","HIGH"));
knitr::opts_chunk$set(echo = TRUE)
library(corrplot)
wine.df <- read.csv("winequality-white.csv", header=T, sep=";")
sum(is.na(wine.df));
# There are no missing data
str(wine.df);
sapply(wine.df, function(x)sum(is.na(x)));
# Check NA for each columns, there are none
sapply(wine.df, function(x)sum(is.null(x)));
# Check Nulls for each columns, there are also none
(wine.corrplot<-cor(wine.df[,-12]));
# Load the wine dataframe set into wine.corrplot
corrplot(wine.corrplot, method="number");
# Utilize the corrplot for visualization tool, notice that density is highly correlated to residual.sugar(0.84). Next up is that alcohol and density(-0.78) have a high negative correlation.
hist(wine.df$quality, freq=T, breaks=seq(1.5,9.5,1), main="Frequency Distirbution of Wine Quality", xlab="WINE QUALITY",ylab="FREQUENCY");
wine.df$quality<-cut(wine.df$quality, 3, labels=c("LOW","MEDIUM","HIGH"));
table(wine.df$quality)
plot(wine.df$quality, main="Distribution of Wine Quality Levels", xlab="WINE QUALITY LEVEL", ylab="FREQUENCY");
wine.df.norm <- as.data.frame(scale(wine.df[,-12],scale=T, center=T))
wine.df.norm <- cbind(wine.df.norm, wine.df[,12])
names(wine.df.norm)[12] <- names(wine.df)[12]
wine.tset_index <- sample(1:nrow(wine.df.norm), 0.7*nrow(wine.df.norm))
wine.tset <- wine.df.norm[wine.tset_index,]
wine.test <- wine.df.norm[-wine.tset_index,]
(nrow(wine.df) == (nrow(wine.tset) + nrow(wine.test)))
knitr::opts_chunk$set(echo = TRUE)
library(corrplot)
library(gmodels)
knitr::opts_chunk$set(echo = TRUE)
library(corrplot)
library(gmodels)
knitr::opts_chunk$set(echo = TRUE)
install.packages("gmodels")
library(corrplot)
library(gmodels)
knitr::opts_chunk$set(echo = TRUE)
library(corrplot)
library(gmodels)
CrossTable(x=wine.knn$k3, y=wine.test$quality, prop.chisq = F)
wine.knn <- list(k3=factor(),k5=factor(),k7=factor())
wine.knn$k3 <- knn(train=wine.train[,-12], test=wine.test[,-12], cl=wine.train$quality, k=3, prob=T)
wine.knn <- list(k3=factor(),k5=factor(),k7=factor())
wine.knn$k3 <- knn(tset=wine.tset[,-12], test=wine.test[,-12], cl=wine.tset$quality, k=3, prob=T)
knitr::opts_chunk$set(echo = TRUE)
nstall.packages("knn")
knitr::opts_chunk$set(echo = TRUE)
packages("knn")
knitr::opts_chunk$set(echo = TRUE)
install.packages("NameOfPackage", dependencies = TRUE)
library(corrplot)
library(gmodels)
wine.knn <- list(k3=factor(),k5=factor(),k7=factor())
wine.knn$k3 <- knn(tset=wine.tset[,-12], test=wine.test[,-12], cl=wine.tset$quality, k=3, prob=T)
knitr::opts_chunk$set(echo = TRUE)
library(corrplot)
library(gmodels)
wine.knn <- list(k3=factor(),k5=factor(),k7=factor())
wine.knn$k3 <- knn(tset=wine.tset[,-12], test=wine.test[,-12], cl=wine.tset$quality, k=3, prob=T)
wine.df.norm <- as.data.frame(scale(wine.df[,-12],scale=T, center=T))
wine.df.norm <- cbind(wine.df.norm, wine.df[,12])
names(wine.df.norm)[12] <- names(wine.df)[12]
wine.tset_index <- sample(1:nrow(wine.df.norm), 0.7*nrow(wine.df.norm))
wine.tset <- wine.df.norm[wine.tset_index,]
wine.test <- wine.df.norm[-wine.tset_index,]
(nrow(wine.df) == (nrow(wine.tset) + nrow(wine.test)))
wine.knn <- list(k3=factor(),k5=factor(),k7=factor())
wine.knn$k3 <- knn(tset=wine.tset[,-12], test=wine.test[,-12], cl=wine.tset$quality, k=3, prob=T)
knitr::opts_chunk$set(echo = TRUE)
library(corrplot)
library(class)
library(gmodels)
wine.knn <- list(k3=factor(),k5=factor(),k7=factor())
wine.knn$k3 <- knn(tset=wine.tset[,-12], test=wine.test[,-12], cl=wine.tset$quality, k=3, prob=T)
knitr::opts_chunk$set(echo = TRUE)
install.packages("class")
library(corrplot)
library(class)
library(gmodels)
install.packages("class")
knitr::opts_chunk$set(echo = TRUE)
install.packages("class")
library(corrplot)
library(class)
library(gmodels)
wine.df <- read.csv("winequality-white.csv", header=T, sep=";")
knitr::opts_chunk$set(echo = TRUE)
library(corrplot)
library(class)
library(gmodels)
wine.df <- read.csv("winequality-white.csv", header=T, sep=";")
sum(is.na(wine.df));
# There are no missing data
knitr::opts_chunk$set(echo = TRUE)
library(corrplot)
library(class)
library(gmodels)
wine.df <- read.csv("winequality-white.csv", header=T, sep=";")
sum(is.na(wine.df));
# There are no missing data
str(wine.df);
sapply(wine.df, function(x)sum(is.na(x)));
# Check NA for each columns, there are none
sapply(wine.df, function(x)sum(is.null(x)));
# Check Nulls for each columns, there are also none
(wine.corrplot<-cor(wine.df[,-12]));
# Load the wine dataframe set into wine.corrplot
corrplot(wine.corrplot, method="number");
# Utilize the corrplot for visualization tool, notice that density is highly correlated to residual.sugar(0.84). Next up is that alcohol and density(-0.78) have a high negative correlation.
hist(wine.df$quality, freq=T, breaks=seq(1.5,9.5,1), main="Frequency Distirbution of Wine Quality", xlab="WINE QUALITY",ylab="FREQUENCY");
wine.df$quality<-cut(wine.df$quality, 3, labels=c("LOW","MEDIUM","HIGH"));
table(wine.df$quality)
plot(wine.df$quality, main="Distribution of Wine Quality Levels", xlab="WINE QUALITY LEVEL", ylab="FREQUENCY");
wine.df.norm <- as.data.frame(scale(wine.df[,-12],scale=T, center=T))
wine.df.norm <- cbind(wine.df.norm, wine.df[,12])
names(wine.df.norm)[12] <- names(wine.df)[12]
wine.tset_index <- sample(1:nrow(wine.df.norm), 0.7*nrow(wine.df.norm))
wine.tset <- wine.df.norm[wine.tset_index,]
wine.test <- wine.df.norm[-wine.tset_index,]
(nrow(wine.df) == (nrow(wine.tset) + nrow(wine.test)))
wine.knn <- list(k3=factor(),k5=factor(),k7=factor())
wine.knn$k3 <- knn(tset=wine.tset[,-12], test=wine.test[,-12], cl=wine.tset$quality, k=3, prob=T)
wine.tset_index <- sample(1:nrow(wine.df.norm), 0.7*nrow(wine.df.norm))
wine.tset <- wine.df.norm[wine.tset_index,]
wine.test <- wine.df.norm[-wine.tset_index,]
(nrow(wine.df) == (nrow(wine.tset) + nrow(wine.test)))
wine.tset_index <- sample(1:nrow(wine.df.norm), 0.7*nrow(wine.df.norm))
wine.tset <- wine.df.norm[wine.tset_index,]
wine.test <- wine.df.norm[-wine.tset_index,]
(nrow(wine.df) == (nrow(wine.tset) + nrow(wine.test)))
CrossTable(x=wine.knn$k3, y=wine.test$quality, prop.chisq = F)
knitr::opts_chunk$set(echo = TRUE)
library(corrplot)
library(class)
library(gmodels)
wine.df <- read.csv("winequality-white.csv", header=T, sep=";")
sum(is.na(wine.df));
# There are no missing data
str(wine.df);
sapply(wine.df, function(x)sum(is.na(x)));
# Check NA for each columns, there are none
sapply(wine.df, function(x)sum(is.null(x)));
# Check Nulls for each columns, there are also none
(wine.corrplot<-cor(wine.df[,-12]));
# Load the wine dataframe set into wine.corrplot
corrplot(wine.corrplot, method="number");
# Utilize the corrplot for visualization tool, notice that density is highly correlated to residual.sugar(0.84). Next up is that alcohol and density(-0.78) have a high negative correlation.
hist(wine.df$quality, freq=T, breaks=seq(1.5,9.5,1), main="Frequency Distirbution of Wine Quality", xlab="WINE QUALITY",ylab="FREQUENCY");
wine.df$quality<-cut(wine.df$quality, 3, labels=c("LOW","MEDIUM","HIGH"));
table(wine.df$quality)
plot(wine.df$quality, main="Distribution of Wine Quality Levels", xlab="WINE QUALITY LEVEL", ylab="FREQUENCY");
wine.df.norm <- as.data.frame(scale(wine.df[,-12],scale=T, center=T))
wine.df.norm <- cbind(wine.df.norm, wine.df[,12])
names(wine.df.norm)[12] <- names(wine.df)[12]
wine.tset_index <- sample(1:nrow(wine.df.norm), 0.7*nrow(wine.df.norm))
wine.tset <- wine.df.norm[wine.tset_index,]
wine.test <- wine.df.norm[-wine.tset_index,]
(nrow(wine.df) == (nrow(wine.tset) + nrow(wine.test)))
wine.tset_index <- sample(1:nrow(wine.df.norm), 0.7*nrow(wine.df.norm))
wine.tset <- wine.df.norm[wine.tset_index,]
wine.test <- wine.df.norm[-wine.tset_index,]
(nrow(wine.df) == (nrow(wine.tset) + nrow(wine.test)))
CrossTable(x=wine.knn$k3, y=wine.test$quality, prop.chisq = F)
knitr::opts_chunk$set(echo = TRUE)
library(corrplot)
library(class)
library(gmodels)
corrplot(wine.corrplot, method="number");
# Utilize the corrplot for visualization tool, notice that density is highly correlated to residual.sugar(0.84). Next up is that alcohol and density(-0.78) have a high negative correlation.
hist(wine.df$quality, freq=T, breaks=seq(1.5,9.5,1), main="Frequency Distirbution of Wine Quality", xlab="WINE QUALITY",ylab="FREQUENCY");
knitr::opts_chunk$set(echo = TRUE)
library(corrplot)
library(class)
library(gmodels)
wine.df <- read.csv("winequality-white.csv", header=T, sep=";")
sum(is.na(wine.df));
# There are no missing data
str(wine.df);
# Verify the structure of the dataset
sapply(wine.df, function(x)sum(is.null(x)));
# Check Nulls for each columns, there are also none
(wine.corrplot<-cor(wine.df[,-12]));
# Load the wine dataframe set into wine.corrplot
hist(wine.df$quality, freq=T, breaks=seq(1.5,9.5,1), main="Frequency Distirbution of Wine Quality", xlab="WINE QUALITY",ylab="FREQUENCY");
plot(wine.df$quality, main="Distribution of Wine Quality Levels", xlab="WINE QUALITY LEVEL", ylab="FREQUENCY");
wine.df$quality<-cut(wine.df$quality, 3, labels=c("LOW","MEDIUM","HIGH"));
table(wine.df$quality)
plot(wine.df$quality, main="Distribution of Wine Quality Levels", xlab="WINE QUALITY LEVEL", ylab="FREQUENCY");
wine.df.norm<-as.data.frame(scale(wine.df[,-12],scale=T, center=T))
wine.df.norm <- cbind(wine.df.norm, wine.df[,12])
names(wine.df.norm)[12] <- names(wine.df)[12]
wine.tset_index <- sample(1:nrow(wine.df.norm), 0.7*nrow(wine.df.norm))
wine.tset <- wine.df.norm[wine.tset_index,]
wine.test <- wine.df.norm[-wine.tset_index,]
(nrow(wine.df) == (nrow(wine.tset) + nrow(wine.test)))
wine.tset_index <- sample(1:nrow(wine.df.norm), 0.7*nrow(wine.df.norm))
wine.tset <- wine.df.norm[wine.tset_index,]
wine.test <- wine.df.norm[-wine.tset_index,]
(nrow(wine.df) == (nrow(wine.tset) + nrow(wine.test)))
wine.tset_index <- sample(1:nrow(wine.df.norm), 0.7*nrow(wine.df.norm))
wine.tset <- wine.df.norm[wine.tset_index,]
wine.test <- wine.df.norm[-wine.tset_index,]
(nrow(wine.df) == (nrow(wine.tset) + nrow(wine.test)))
wine.tset_index <- sample(1:nrow(wine.df.norm), 0.7*nrow(wine.df.norm))
wine.tset <- wine.df.norm[wine.tset_index,]
wine.test <- wine.df.norm[-wine.tset_index,]
(nrow(wine.df) == (nrow(wine.tset) + nrow(wine.test)))
CrossTable(x=wine.knn$k3, y=wine.test$quality, prop.chisq = F)
CrossTable(x=wine.knn$k3, y=wine.test$quality$k3, prop.chisq = F)
CrossTable(x=wine.knn$k3, y=wine.test$quality, prop.chisq = F)
CrossTable(x=wine.knn$k3, y=wine.test$quality, prop.chisq = F)
wine.knn <- list(k3=factor(),k5=factor(),k7=factor())
wine.knn$k3 <- knn(train=wine.train[,-12], test=wine.test[,-12], cl=wine.train$quality, k=3, prob=T)
wine.tset_index <- sample(1:nrow(wine.df.norm), 0.7*nrow(wine.df.norm))
wine.tset <- wine.df.norm[wine.tset_index,]
wine.test <- wine.df.norm[-wine.tset_index,]
(nrow(wine.df) == (nrow(wine.tset) + nrow(wine.test)))
wine.knn <- list(k3=factor(),k5=factor(),k7=factor())
wine.knn$k3 <- knn(train=wine.train[,-12], test=wine.test[,-12], cl=wine.train$quality, k=3, prob=T)
wine.knn <- list(k3=factor(),k5=factor(),k7=factor())
wine.knn$k3 <- knn(tset=wine.train[,-12], test=wine.test[,-12], cl=wine.train$quality, k=3, prob=T)
wine.knn <- list(k3=factor(),k5=factor(),k7=factor())
wine.knn$k3 <- knn(tset=wine.tset[,-12], test=wine.test[,-12], cl=wine.train$quality, k=3, prob=T)
wine.knn <- list(k3=factor(),k5=factor(),k7=factor())
wine.knn$k3 <- knn(tset=wine.tset[,-12], test=wine.test[,-12], cl=wine.tset$quality, k=3, prob=T)
wine.tset_index <- sample(1:nrow(wine.df.norm), 0.7*nrow(wine.df.norm))
wine.tset <- wine.df.norm[wine.tset_index,]
wine.test <- wine.df.norm[-wine.tset_index,]
(nrow(wine.df) == (nrow(wine.tset) + nrow(wine.test)))
wine.knn <- list(k3=factor(),k5=factor(),k7=factor())
wine.knn$k3 <- knn(tset=wine.tset[,-12], test=wine.test[,-12], cl=wine.tset$quality, k=3, prob=T)
wine.knn <- list(k3=factor(),k5=factor(),k7=factor())
wine.knn$k3 <- knn(tset=wine.tset[,-12], test=wine.test[,-12], cl=wine.tset$quality, k=3, prob=T)
wine.knn <- list(k3=factor(),k5=factor(),k7=factor())
wine.knn$k3 <- knn(tset=wine.tset[,-12], cl=wine.tset$quality, k=3, prob=T)
wine.knn <- list(k3=factor(),k5=factor(),k7=factor())
wine.knn$k3 <- knn(tset=wine.tset[,-12], test=wine.test[,-12], cl=wine.tset$quality, k=3, prob=T)
wine.knn <- list(k3=factor(),k5=factor(),k7=factor())
wine.knn$k3 <- knn(tset=wine.tset[,-12], test=wine.test[,-12], cl=wine.tset$quality, k=3, prob=T)
wine.knn <- list(k3=factor(),k5=factor(),k7=factor())
#wine.knn$k3 <- knn(tset=wine.tset[,-12], test=wine.test[,-12], cl=wine.tset$quality, k=3, prob=T)
#wine.knn$k5 <- knn(tset=wine.tset[,-12], test=wine.test[,-12], cl=wine.tset$quality, k=5)
#wine.knn$k15 <- knn(tset=wine.tset[-12], test=wine.test[,-12], cl=wine.tset$quality, k=15)
wine.knn$k3 <- knn(tset=wine.tset[,-12], cl=wine.tset$quality, k=3, prob=T)
wine.knn <- list(k3=factor(),k5=factor(),k7=factor())
#wine.knn$k3 <- knn(tset=wine.tset[,-12], test=wine.test[,-12], cl=wine.tset$quality, k=3, prob=T)
#wine.knn$k5 <- knn(tset=wine.tset[,-12], test=wine.test[,-12], cl=wine.tset$quality, k=5)
#wine.knn$k15 <- knn(tset=wine.tset[-12], test=wine.test[,-12], cl=wine.tset$quality, k=15)
wine.knn$k3 <- knn(tset=wine.tset[,-12], cl=wine.tset$quality, k=3, prob=T)
knitr::opts_chunk$set(echo = TRUE)
library(corrplot)
library(class)
library(gmodels)
wine.df <- read.csv("winequality-white.csv", header=T, sep=";")
sum(is.na(wine.df));
# There are no missing data
str(wine.df);
# Verify the structure of the dataset
sapply(wine.df, function(x)sum(is.na(x)));
# Check NA for each columns, there are none
sapply(wine.df, function(x)sum(is.null(x)));
# Check Nulls for each columns, there are also none
(wine.corrplot<-cor(wine.df[,-12]));
# Load the wine dataframe set into wine.corrplot
corrplot(wine.corrplot, method="number");
# Utilize the corrplot for visualization tool, notice that density is highly correlated to residual.sugar(0.84). Next up is that alcohol and density(-0.78) have a high negative correlation.
hist(wine.df$quality, freq=T, breaks=seq(1.5,9.5,1), main="Frequency Distirbution of Wine Quality", xlab="WINE QUALITY",ylab="FREQUENCY");
wine.df$quality<-cut(wine.df$quality, 3, labels=c("LOW","MEDIUM","HIGH"));
table(wine.df$quality)
plot(wine.df$quality, main="Distribution of Wine Quality Levels", xlab="WINE QUALITY LEVEL", ylab="FREQUENCY");
wine.df.norm<-as.data.frame(scale(wine.df[,-12],scale=T, center=T))
wine.df.norm <- cbind(wine.df.norm, wine.df[,12])
names(wine.df.norm)[12] <- names(wine.df)[12]
wine.tset_index <- sample(1:nrow(wine.df.norm), 0.7*nrow(wine.df.norm))
wine.tset <- wine.df.norm[wine.tset_index,]
wine.test <- wine.df.norm[-wine.tset_index,]
(nrow(wine.df) == (nrow(wine.tset) + nrow(wine.test)))
wine.knn <- list(k3=factor(),k5=factor(),k7=factor())
wine.knn$k3 <- knn(tset=wine.tset[,-12], test=wine.test[,-12], cl=wine.tset$quality, k=3, prob=T)
knitr::opts_chunk$set(echo = TRUE)
library(corrplot)
library(class)
library(gmodels)
wine.df <- read.csv("winequality-white.csv", header=T, sep=";")
sum(is.na(wine.df));
# There are no missing data
str(wine.df);
# Verify the structure of the dataset
sapply(wine.df, function(x)sum(is.na(x)));
# Check NA for each columns, there are none
sapply(wine.df, function(x)sum(is.null(x)));
# Check Nulls for each columns, there are also none
(wine.corrplot<-cor(wine.df[,-12]));
# Load the wine dataframe set into wine.corrplot
corrplot(wine.corrplot, method="number");
# Utilize the corrplot for visualization tool, notice that density is highly correlated to residual.sugar(0.84). Next up is that alcohol and density(-0.78) have a high negative correlation.
hist(wine.df$quality, freq=T, breaks=seq(1.5,9.5,1), main="Frequency Distirbution of Wine Quality", xlab="WINE QUALITY",ylab="FREQUENCY");
wine.df$quality<-cut(wine.df$quality, 3, labels=c("LOW","MEDIUM","HIGH"));
table(wine.df$quality)
plot(wine.df$quality, main="Distribution of Wine Quality Levels", xlab="WINE QUALITY LEVEL", ylab="FREQUENCY");
wine.df.norm<-as.data.frame(scale(wine.df[,-12],scale=T, center=T))
wine.df.norm <- cbind(wine.df.norm, wine.df[,12])
names(wine.df.norm)[12] <- names(wine.df)[12]
set.seed(42)
wine.tset_index <- sample(1:nrow(wine.df.norm), 0.7*nrow(wine.df.norm))
wine.tset <- wine.df.norm[wine.tset_index,]
wine.test <- wine.df.norm[-wine.tset_index,]
(nrow(wine.df) == (nrow(wine.tset) + nrow(wine.test)))
wine.knn <- list(k3=factor(),k5=factor(),k7=factor())
wine.knn$k3 <- knn(tset=wine.tset[,-12], test=wine.test[,-12], cl=wine.tset$quality, k=3, prob=T)
wine.knn <- list(k3=factor(),k5=factor(),k7=factor())
wine.knn$k3 <- knn(tset=wine.tset[,-12], test=wine.test[,-12], cl=wine.tset$quality, k=3, prob=T)
?knn
wine.knn <- list(k3=factor(),k5=factor(),k7=factor())
wine.knn$k3 <- knn(train=wine.tset[,-12], test=wine.test[,-12], cl=wine.tset$quality, k=3, prob=T)
wine.knn$k5 <- knn(train=wine.tset[,-12], test=wine.test[,-12], cl=wine.tset$quality, k=5)
wine.knn$k15 <- knn(train=wine.tset[-12], test=wine.test[,-12], cl=wine.tset$quality, k=15)
CrossTable(x=wine.knn$k3, y=wine.test$quality, prop.chisq = F)
CrossTable(x=wine.knn$k3, y=wine.test$quality, prop.chisq = F)
CrossTable(x=wine.knn$k5, y=wine.test$quality, prop.chisq = F)
CrossTable(x=wine.knn$k15, y=wine.test$quality, prop.chisq = F)
# make a knn list for the wine set,
wine.knn <- list(k3=factor(),k5=factor(),k7=factor())
wine.knn$k3 <- knn(train=wine.tset[,-12], test=wine.test[,-12], cl=wine.tset$quality, k=5, prob=T)
wine.knn$k5 <- knn(train=wine.tset[,-12], test=wine.test[,-12], cl=wine.tset$quality, k=10)
wine.knn$k15 <- knn(train=wine.tset[-12], test=wine.test[,-12], cl=wine.tset$quality, k=15)
# Evaluate the cross table through
CrossTable(x=wine.knn$k5, y=wine.test$quality, prop.chisq = F)
CrossTable(x=wine.knn$k10, y=wine.test$quality, prop.chisq = F)
# make a knn list for the wine set,
wine.knn <- list(k3=factor(),k5=factor(),k7=factor())
wine.knn$k3 <- knn(train=wine.tset[,-12], test=wine.test[,-12], cl=wine.tset$quality, k=5, prob=T)
wine.knn$k5 <- knn(train=wine.tset[,-12], test=wine.test[,-12], cl=wine.tset$quality, k=10)
wine.knn$k15 <- knn(train=wine.tset[-12], test=wine.test[,-12], cl=wine.tset$quality, k=15)
# Evaluate the cross table through
CrossTable(x=wine.knn$k5, y=wine.test$quality, prop.chisq = F)
CrossTable(x=wine.knn$k10, y=wine.test$quality, prop.chisq = F)
CrossTable(x=wine.knn$k10, y=wine.test$quality, prop.chisq = F)
# make a knn list for the wine set,
wine.knn <- list(k3=factor(),k5=factor(),k7=factor())
wine.knn$k5 <- knn(train=wine.tset[,-12], test=wine.test[,-12], cl=wine.tset$quality, k=5, prob=T)
wine.knn$k10 <- knn(train=wine.tset[,-12], test=wine.test[,-12], cl=wine.tset$quality, k=10)
wine.knn$k15 <- knn(train=wine.tset[-12], test=wine.test[,-12], cl=wine.tset$quality, k=15)
# Evaluate the cross table through
CrossTable(x=wine.knn$k5, y=wine.test$quality, prop.chisq = F)
CrossTable(x=wine.knn$k10, y=wine.test$quality, prop.chisq = F)
x=1
x=
;
x
y<-c(1,2,3);
y
x+y
x*y
y=2
x*y
y
y=c(1,2,3)
y=df(y)
df[1,2]
y=df[1,2]
x
y
x+y
x+y
y+y
y*3
y*5
x=df[1,2]
df?
create dataframe
install.packages("tidyverse")
rm(list=()
rm(list=())
rm(list = ())
rm(list=ls())
x<-1
1->x
2->y
3=z
z=3
rm(list=ls())
x<-1
x<--1
x
x*2
x<-c(1,2,3)
/ls
?ls
install.packages("rjson")
library("rjson")
rm(list=ls())
results <-fromJSON(file="C:\Users\TIM\Documents\Big Data\CKME 136\yelpdata.user.json")
results <-fromJSON(file="C:/Users/TIM/Documents/Big Data/CKME 136\yelpdata.user.json")
results <-fromJSON(file="C:/Users/TIM/Documents/Big/Data/CKME 136\yelpdata.user.json")
results <-fromJSON(file="C:/Users/TIM/Documents/Big-Data/CKME-136\yelpdata.user.json")
results <-fromJSON(file="C:/Users/TIM/Documents/Big\\ Data/CKME\\ 136\yelpdata.user.json")
results <-fromJSON(file="C:\Users\TIM\Documents\Big-Data\CKME-136\user.json")
cd c:\
cd:
c:
\
cd c:/
results <-fromJSON(file="user.json")
results <-fromJSON(file="user.json")
setwd("~/Big Data/CKME 136/R/Yelp-Data")
library(data.table)
library(NLP)
library(tm)
library(Matrix)
library(SnowballC)
library(crqanlp)
library(qdap)
library(wordcloud)
library(qdapTools)
library(ggplot2)
library(quanteda)
install.packages(quanteda)
install.packages(quanteda)
library(rpart)
library(ggthemes)
install.packages("quanteda)
)
""
)
)
/
1
1
`1`
asa
installed.packages("quanteda")
library(quanteda)
install.packages("LibPath")
installed.packages("quanteda")
library(LibPath)
installed.packages("quanteda")
installed.packages("ggthemes")
installed.packages(ggthemes)
caTools
business<-read.csv("yelp_business.csv",stringsAsFactors = FALSE)
